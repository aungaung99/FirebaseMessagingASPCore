import{registerVersion,_registerComponent,_getProvider,getApp}from"https://www.gstatic.com/firebasejs/9.6.7/firebase-app.js";var LogLevel;!function(e){e[e.DEBUG=0]="DEBUG",e[e.VERBOSE=1]="VERBOSE",e[e.INFO=2]="INFO",e[e.WARN=3]="WARN",e[e.ERROR=4]="ERROR",e[e.SILENT=5]="SILENT"}(LogLevel=LogLevel||{});const levelStringToEnum={debug:LogLevel.DEBUG,verbose:LogLevel.VERBOSE,info:LogLevel.INFO,warn:LogLevel.WARN,error:LogLevel.ERROR,silent:LogLevel.SILENT},defaultLogLevel=LogLevel.INFO,ConsoleMethod={[LogLevel.DEBUG]:"log",[LogLevel.VERBOSE]:"log",[LogLevel.INFO]:"info",[LogLevel.WARN]:"warn",[LogLevel.ERROR]:"error"},defaultLogHandler=(e,t,...n)=>{if(!(t<e.logLevel)){var r=(new Date).toISOString(),a=ConsoleMethod[t];if(!a)throw new Error(`Attempted to log a message with an invalid logType (value: ${t})`);console[a](`[${r}]  ${e.name}:`,...n)}};class Logger{constructor(e){this.name=e,this._logLevel=defaultLogLevel,this._logHandler=defaultLogHandler,this._userLogHandler=null}get logLevel(){return this._logLevel}set logLevel(e){if(!(e in LogLevel))throw new TypeError(`Invalid value "${e}" assigned to \`logLevel\``);this._logLevel=e}setLogLevel(e){this._logLevel="string"==typeof e?levelStringToEnum[e]:e}get logHandler(){return this._logHandler}set logHandler(e){if("function"!=typeof e)throw new TypeError("Value assigned to `logHandler` must be a function");this._logHandler=e}get userLogHandler(){return this._userLogHandler}set userLogHandler(e){this._userLogHandler=e}debug(...e){this._userLogHandler&&this._userLogHandler(this,LogLevel.DEBUG,...e),this._logHandler(this,LogLevel.DEBUG,...e)}log(...e){this._userLogHandler&&this._userLogHandler(this,LogLevel.VERBOSE,...e),this._logHandler(this,LogLevel.VERBOSE,...e)}info(...e){this._userLogHandler&&this._userLogHandler(this,LogLevel.INFO,...e),this._logHandler(this,LogLevel.INFO,...e)}warn(...e){this._userLogHandler&&this._userLogHandler(this,LogLevel.WARN,...e),this._logHandler(this,LogLevel.WARN,...e)}error(...e){this._userLogHandler&&this._userLogHandler(this,LogLevel.ERROR,...e),this._logHandler(this,LogLevel.ERROR,...e)}}function isBrowserExtension(){var e="object"==typeof chrome?chrome.runtime:"object"==typeof browser?browser.runtime:void 0;return"object"==typeof e&&void 0!==e.id}function isIndexedDBAvailable(){return"object"==typeof indexedDB}function validateIndexedDBOpenable(){return new Promise((t,n)=>{try{let e=!0;const r="validate-browser-context-for-indexeddb-analytics-module",a=self.indexedDB.open(r);a.onsuccess=()=>{a.result.close(),e||self.indexedDB.deleteDatabase(r),t(!0)},a.onupgradeneeded=()=>{e=!1},a.onerror=()=>{var e;n((null===(e=a.error)||void 0===e?void 0:e.message)||"")}}catch(e){n(e)}})}function areCookiesEnabled(){return!("undefined"==typeof navigator||!navigator.cookieEnabled)}const ERROR_NAME="FirebaseError";class FirebaseError extends Error{constructor(e,t,n){super(t),this.code=e,this.customData=n,this.name=ERROR_NAME,Object.setPrototypeOf(this,FirebaseError.prototype),Error.captureStackTrace&&Error.captureStackTrace(this,ErrorFactory.prototype.create)}}class ErrorFactory{constructor(e,t,n){this.service=e,this.serviceName=t,this.errors=n}create(e,...t){var n=t[0]||{},t=`${this.service}/${e}`,e=this.errors[e],e=e?replaceTemplate(e,n):"Error",e=`${this.serviceName}: ${e} (${t}).`;return new FirebaseError(t,e,n)}}function replaceTemplate(e,r){return e.replace(PATTERN,(e,t)=>{var n=r[t];return null!=n?String(n):`<${t}?>`})}const PATTERN=/\{\$([^}]+)}/g;function deepEqual(e,t){if(e===t)return!0;const n=Object.keys(e),r=Object.keys(t);for(const o of n){if(!r.includes(o))return!1;var a=e[o],i=t[o];if(isObject(a)&&isObject(i)){if(!deepEqual(a,i))return!1}else if(a!==i)return!1}for(const s of r)if(!n.includes(s))return!1;return!0}function isObject(e){return null!==e&&"object"==typeof e}const DEFAULT_INTERVAL_MILLIS=1e3,DEFAULT_BACKOFF_FACTOR=2,MAX_VALUE_MILLIS=144e5,RANDOM_FACTOR=.5;function calculateBackoffMillis(e,t=DEFAULT_INTERVAL_MILLIS,n=DEFAULT_BACKOFF_FACTOR){n=t*Math.pow(n,e),e=Math.round(RANDOM_FACTOR*n*(Math.random()-.5)*2);return Math.min(MAX_VALUE_MILLIS,n+e)}function getModularInstance(e){return e&&e._delegate?e._delegate:e}class Component{constructor(e,t,n){this.name=e,this.instanceFactory=t,this.type=n,this.multipleInstances=!1,this.serviceProps={},this.instantiationMode="LAZY",this.onInstanceCreated=null}setInstantiationMode(e){return this.instantiationMode=e,this}setMultipleInstances(e){return this.multipleInstances=e,this}setServiceProps(e){return this.serviceProps=e,this}setInstanceCreatedCallback(e){return this.onInstanceCreated=e,this}}function toArray(e){return Array.prototype.slice.call(e)}function promisifyRequest(n){return new Promise(function(e,t){n.onsuccess=function(){e(n.result)},n.onerror=function(){t(n.error)}})}function promisifyRequestCall(n,r,a){var i,e=new Promise(function(e,t){promisifyRequest(i=n[r].apply(n,a)).then(e,t)});return e.request=i,e}function promisifyCursorRequestCall(e,t,n){var r=promisifyRequestCall(e,t,n);return r.then(function(e){if(e)return new Cursor(e,r.request)})}function proxyProperties(e,n,t){t.forEach(function(t){Object.defineProperty(e.prototype,t,{get:function(){return this[n][t]},set:function(e){this[n][t]=e}})})}function proxyRequestMethods(t,n,r,e){e.forEach(function(e){e in r.prototype&&(t.prototype[e]=function(){return promisifyRequestCall(this[n],e,arguments)})})}function proxyMethods(t,n,r,e){e.forEach(function(e){e in r.prototype&&(t.prototype[e]=function(){return this[n][e].apply(this[n],arguments)})})}function proxyCursorRequestMethods(t,n,r,e){e.forEach(function(e){e in r.prototype&&(t.prototype[e]=function(){return promisifyCursorRequestCall(this[n],e,arguments)})})}function Index(e){this._index=e}function Cursor(e,t){this._cursor=e,this._request=t}function ObjectStore(e){this._store=e}function Transaction(n){this._tx=n,this.complete=new Promise(function(e,t){n.oncomplete=function(){e()},n.onerror=function(){t(n.error)},n.onabort=function(){t(n.error)}})}function UpgradeDB(e,t,n){this._db=e,this.oldVersion=t,this.transaction=new Transaction(n)}function DB(e){this._db=e}function openDb(e,t,n){var t=promisifyRequestCall(indexedDB,"open",[e,t]),r=t.request;return r&&(r.onupgradeneeded=function(e){n&&n(new UpgradeDB(r.result,e.oldVersion,r.transaction))}),t.then(function(e){return new DB(e)})}proxyProperties(Index,"_index",["name","keyPath","multiEntry","unique"]),proxyRequestMethods(Index,"_index",IDBIndex,["get","getKey","getAll","getAllKeys","count"]),proxyCursorRequestMethods(Index,"_index",IDBIndex,["openCursor","openKeyCursor"]),proxyProperties(Cursor,"_cursor",["direction","key","primaryKey","value"]),proxyRequestMethods(Cursor,"_cursor",IDBCursor,["update","delete"]),["advance","continue","continuePrimaryKey"].forEach(function(n){n in IDBCursor.prototype&&(Cursor.prototype[n]=function(){var t=this,e=arguments;return Promise.resolve().then(function(){return t._cursor[n].apply(t._cursor,e),promisifyRequest(t._request).then(function(e){if(e)return new Cursor(e,t._request)})})})}),ObjectStore.prototype.createIndex=function(){return new Index(this._store.createIndex.apply(this._store,arguments))},ObjectStore.prototype.index=function(){return new Index(this._store.index.apply(this._store,arguments))},proxyProperties(ObjectStore,"_store",["name","keyPath","indexNames","autoIncrement"]),proxyRequestMethods(ObjectStore,"_store",IDBObjectStore,["put","add","delete","clear","get","getAll","getKey","getAllKeys","count"]),proxyCursorRequestMethods(ObjectStore,"_store",IDBObjectStore,["openCursor","openKeyCursor"]),proxyMethods(ObjectStore,"_store",IDBObjectStore,["deleteIndex"]),Transaction.prototype.objectStore=function(){return new ObjectStore(this._tx.objectStore.apply(this._tx,arguments))},proxyProperties(Transaction,"_tx",["objectStoreNames","mode"]),proxyMethods(Transaction,"_tx",IDBTransaction,["abort"]),UpgradeDB.prototype.createObjectStore=function(){return new ObjectStore(this._db.createObjectStore.apply(this._db,arguments))},proxyProperties(UpgradeDB,"_db",["name","version","objectStoreNames"]),proxyMethods(UpgradeDB,"_db",IDBDatabase,["deleteObjectStore","close"]),DB.prototype.transaction=function(){return new Transaction(this._db.transaction.apply(this._db,arguments))},proxyProperties(DB,"_db",["name","version","objectStoreNames"]),proxyMethods(DB,"_db",IDBDatabase,["close"]),["openCursor","openKeyCursor"].forEach(function(a){[ObjectStore,Index].forEach(function(e){a in e.prototype&&(e.prototype[a.replace("open","iterate")]=function(){var e=toArray(arguments),t=e[e.length-1],n=this._store||this._index,r=n[a].apply(n,e.slice(0,-1));r.onsuccess=function(){t(r.result)}})})}),[Index,ObjectStore].forEach(function(e){e.prototype.getAll||(e.prototype.getAll=function(e,n){var r=this,a=[];return new Promise(function(t){r.iterateCursor(e,function(e){e?(a.push(e.value),void 0===n||a.length!=n?e.continue():t(a)):t(a)})})})});const name$1="@firebase/installations",version$1="0.5.5",PENDING_TIMEOUT_MS=1e4,PACKAGE_VERSION=`w:${version$1}`,INTERNAL_AUTH_VERSION="FIS_v2",INSTALLATIONS_API_URL="https://firebaseinstallations.googleapis.com/v1",TOKEN_EXPIRATION_BUFFER=36e5,SERVICE="installations",SERVICE_NAME="Installations",ERROR_DESCRIPTION_MAP={"missing-app-config-values":'Missing App configuration value: "{$valueName}"',"not-registered":"Firebase Installation is not registered.","installation-not-found":"Firebase Installation not found.","request-failed":'{$requestName} request failed with error "{$serverCode} {$serverStatus}: {$serverMessage}"',"app-offline":"Could not process request. Application offline.","delete-pending-registration":"Can't delete installation while there is a pending registration request."},ERROR_FACTORY$1=new ErrorFactory(SERVICE,SERVICE_NAME,ERROR_DESCRIPTION_MAP);function isServerError(e){return e instanceof FirebaseError&&e.code.includes("request-failed")}function getInstallationsEndpoint({projectId:e}){return`${INSTALLATIONS_API_URL}/projects/${e}/installations`}function extractAuthTokenInfoFromResponse(e){return{token:e.token,requestStatus:2,expiresIn:getExpiresInFromResponseExpiresIn(e.expiresIn),creationTime:Date.now()}}async function getErrorFromResponse(e,t){t=(await t.json()).error;return ERROR_FACTORY$1.create("request-failed",{requestName:e,serverCode:t.code,serverMessage:t.message,serverStatus:t.status})}function getHeaders$1({apiKey:e}){return new Headers({"Content-Type":"application/json",Accept:"application/json","x-goog-api-key":e})}function getHeadersWithAuth(e,{refreshToken:t}){const n=getHeaders$1(e);return n.append("Authorization",getAuthorizationHeader(t)),n}async function retryIfServerError(e){var t=await e();return 500<=t.status&&t.status<600?e():t}function getExpiresInFromResponseExpiresIn(e){return Number(e.replace("s","000"))}function getAuthorizationHeader(e){return`${INTERNAL_AUTH_VERSION} ${e}`}async function createInstallationRequest(e,{fid:t}){const n=getInstallationsEndpoint(e);var r=getHeaders$1(e),e={fid:t,authVersion:INTERNAL_AUTH_VERSION,appId:e.appId,sdkVersion:PACKAGE_VERSION};const a={method:"POST",headers:r,body:JSON.stringify(e)},i=await retryIfServerError(()=>fetch(n,a));if(i.ok){e=await i.json();return{fid:e.fid||t,registrationStatus:2,refreshToken:e.refreshToken,authToken:extractAuthTokenInfoFromResponse(e.authToken)}}throw await getErrorFromResponse("Create Installation",i)}function sleep(t){return new Promise(e=>{setTimeout(e,t)})}function bufferToBase64UrlSafe(e){const t=btoa(String.fromCharCode(...e));return t.replace(/\+/g,"-").replace(/\//g,"_")}const VALID_FID_PATTERN=/^[cdef][\w-]{21}$/,INVALID_FID="";function generateFid(){try{const t=new Uint8Array(17),n=self.crypto||self.msCrypto;n.getRandomValues(t),t[0]=112+t[0]%16;var e=encode(t);return VALID_FID_PATTERN.test(e)?e:INVALID_FID}catch(e){return INVALID_FID}}function encode(e){const t=bufferToBase64UrlSafe(e);return t.substr(0,22)}function getKey(e){return`${e.appName}!${e.appId}`}const fidChangeCallbacks=new Map;function fidChanged(e,t){e=getKey(e);callFidChangeCallbacks(e,t),broadcastFidChange(e,t)}function callFidChangeCallbacks(e,t){e=fidChangeCallbacks.get(e);if(e)for(const n of e)n(t)}function broadcastFidChange(e,t){const n=getBroadcastChannel();n&&n.postMessage({key:e,fid:t}),closeBroadcastChannel()}let broadcastChannel=null;function getBroadcastChannel(){return!broadcastChannel&&"BroadcastChannel"in self&&(broadcastChannel=new BroadcastChannel("[Firebase] FID Change"),broadcastChannel.onmessage=e=>{callFidChangeCallbacks(e.data.key,e.data.fid)}),broadcastChannel}function closeBroadcastChannel(){0===fidChangeCallbacks.size&&broadcastChannel&&(broadcastChannel.close(),broadcastChannel=null)}const DATABASE_NAME="firebase-installations-database",DATABASE_VERSION=1,OBJECT_STORE_NAME="firebase-installations-store";let dbPromise=null;function getDbPromise(){return dbPromise=dbPromise||openDb(DATABASE_NAME,DATABASE_VERSION,e=>{0===e.oldVersion&&e.createObjectStore(OBJECT_STORE_NAME)}),dbPromise}async function set(e,t){var n=getKey(e);const r=await getDbPromise(),a=r.transaction(OBJECT_STORE_NAME,"readwrite"),i=a.objectStore(OBJECT_STORE_NAME);var o=await i.get(n);return await i.put(t,n),await a.complete,o&&o.fid===t.fid||fidChanged(e,t.fid),t}async function remove(e){e=getKey(e);const t=await getDbPromise(),n=t.transaction(OBJECT_STORE_NAME,"readwrite");await n.objectStore(OBJECT_STORE_NAME).delete(e),await n.complete}async function update(e,t){var n=getKey(e);const r=await getDbPromise(),a=r.transaction(OBJECT_STORE_NAME,"readwrite"),i=a.objectStore(OBJECT_STORE_NAME);var o=await i.get(n),t=t(o);return void 0===t?await i.delete(n):await i.put(t,n),await a.complete,!t||o&&o.fid===t.fid||fidChanged(e,t.fid),t}async function getInstallationEntry(t){let n;var e=await update(t,e=>{e=updateOrCreateInstallationEntry(e),e=triggerRegistrationIfNecessary(t,e);return n=e.registrationPromise,e.installationEntry});return e.fid===INVALID_FID?{installationEntry:await n}:{installationEntry:e,registrationPromise:n}}function updateOrCreateInstallationEntry(e){return clearTimedOutRequest(e||{fid:generateFid(),registrationStatus:0})}function triggerRegistrationIfNecessary(e,t){if(0!==t.registrationStatus)return 1===t.registrationStatus?{installationEntry:t,registrationPromise:waitUntilFidRegistration(e)}:{installationEntry:t};if(!navigator.onLine)return{installationEntry:t,registrationPromise:Promise.reject(ERROR_FACTORY$1.create("app-offline"))};t={fid:t.fid,registrationStatus:1,registrationTime:Date.now()};return{installationEntry:t,registrationPromise:registerInstallation(e,t)}}async function registerInstallation(t,n){try{return set(t,await createInstallationRequest(t,n))}catch(e){throw isServerError(e)&&409===e.customData.serverCode?await remove(t):await set(t,{fid:n.fid,registrationStatus:0}),e}}async function waitUntilFidRegistration(e){let t=await updateInstallationRequest(e);for(;1===t.registrationStatus;)await sleep(100),t=await updateInstallationRequest(e);if(0!==t.registrationStatus)return t;var{installationEntry:n,registrationPromise:r}=await getInstallationEntry(e);return r||n}function updateInstallationRequest(e){return update(e,e=>{if(!e)throw ERROR_FACTORY$1.create("installation-not-found");return clearTimedOutRequest(e)})}function clearTimedOutRequest(e){return hasInstallationRequestTimedOut(e)?{fid:e.fid,registrationStatus:0}:e}function hasInstallationRequestTimedOut(e){return 1===e.registrationStatus&&e.registrationTime+PENDING_TIMEOUT_MS<Date.now()}async function generateAuthTokenRequest({appConfig:e,platformLoggerProvider:t},n){const r=getGenerateAuthTokenEndpoint(e,n),a=getHeadersWithAuth(e,n),i=t.getImmediate({optional:!0});i&&a.append("x-firebase-client",i.getPlatformInfoString());t={installation:{sdkVersion:PACKAGE_VERSION}};const o={method:"POST",headers:a,body:JSON.stringify(t)},s=await retryIfServerError(()=>fetch(r,o));if(s.ok)return extractAuthTokenInfoFromResponse(await s.json());throw await getErrorFromResponse("Generate Auth Token",s)}function getGenerateAuthTokenEndpoint(e,{fid:t}){return`${getInstallationsEndpoint(e)}/${t}/authTokens:generate`}async function refreshAuthToken(n,r=!1){let a;var e=await update(n.appConfig,e=>{if(!isEntryRegistered(e))throw ERROR_FACTORY$1.create("not-registered");var t=e.authToken;if(!r&&isAuthTokenValid(t))return e;if(1===t.requestStatus)return a=waitUntilAuthTokenRequest(n,r),e;if(!navigator.onLine)throw ERROR_FACTORY$1.create("app-offline");e=makeAuthTokenRequestInProgressEntry(e);return a=fetchAuthTokenFromServer(n,e),e});return a?await a:e.authToken}async function waitUntilAuthTokenRequest(e,t){let n=await updateAuthTokenRequest(e.appConfig);for(;1===n.authToken.requestStatus;)await sleep(100),n=await updateAuthTokenRequest(e.appConfig);var r=n.authToken;return 0===r.requestStatus?refreshAuthToken(e,t):r}function updateAuthTokenRequest(e){return update(e,e=>{if(!isEntryRegistered(e))throw ERROR_FACTORY$1.create("not-registered");return hasAuthTokenRequestTimedOut(e.authToken)?Object.assign(Object.assign({},e),{authToken:{requestStatus:0}}):e})}async function fetchAuthTokenFromServer(t,n){try{var e=await generateAuthTokenRequest(t,n),r=Object.assign(Object.assign({},n),{authToken:e});return await set(t.appConfig,r),e}catch(e){throw!isServerError(e)||401!==e.customData.serverCode&&404!==e.customData.serverCode?(n=Object.assign(Object.assign({},n),{authToken:{requestStatus:0}}),await set(t.appConfig,n)):await remove(t.appConfig),e}}function isEntryRegistered(e){return void 0!==e&&2===e.registrationStatus}function isAuthTokenValid(e){return 2===e.requestStatus&&!isAuthTokenExpired(e)}function isAuthTokenExpired(e){var t=Date.now();return t<e.creationTime||e.creationTime+e.expiresIn<t+TOKEN_EXPIRATION_BUFFER}function makeAuthTokenRequestInProgressEntry(e){var t={requestStatus:1,requestTime:Date.now()};return Object.assign(Object.assign({},e),{authToken:t})}function hasAuthTokenRequestTimedOut(e){return 1===e.requestStatus&&e.requestTime+PENDING_TIMEOUT_MS<Date.now()}async function getId(e){const{installationEntry:t,registrationPromise:n}=await getInstallationEntry(e.appConfig);return(n||refreshAuthToken(e)).catch(console.error),t.fid}async function getToken(e,t=!1){return await completeInstallationRegistration(e.appConfig),(await refreshAuthToken(e,t)).token}async function completeInstallationRegistration(e){var e=(await getInstallationEntry(e))["registrationPromise"];e&&await e}function extractAppConfig(e){if(!e||!e.options)throw getMissingValueError("App Configuration");if(!e.name)throw getMissingValueError("App Name");for(const t of["projectId","apiKey","appId"])if(!e.options[t])throw getMissingValueError(t);return{appName:e.name,projectId:e.options.projectId,apiKey:e.options.apiKey,appId:e.options.appId}}function getMissingValueError(e){return ERROR_FACTORY$1.create("missing-app-config-values",{valueName:e})}const INSTALLATIONS_NAME="installations",INSTALLATIONS_NAME_INTERNAL="installations-internal",publicFactory=e=>{e=e.getProvider("app").getImmediate();return{app:e,appConfig:extractAppConfig(e),platformLoggerProvider:_getProvider(e,"platform-logger"),_delete:()=>Promise.resolve()}},internalFactory=e=>{e=e.getProvider("app").getImmediate();const t=_getProvider(e,INSTALLATIONS_NAME).getImmediate();return{getId:()=>getId(t),getToken:e=>getToken(t,e)}};function registerInstallations(){_registerComponent(new Component(INSTALLATIONS_NAME,publicFactory,"PUBLIC")),_registerComponent(new Component(INSTALLATIONS_NAME_INTERNAL,internalFactory,"PRIVATE"))}registerInstallations(),registerVersion(name$1,version$1),registerVersion(name$1,version$1,"esm2017");const ANALYTICS_TYPE="analytics",GA_FID_KEY="firebase_id",ORIGIN_KEY="origin",FETCH_TIMEOUT_MILLIS=6e4,DYNAMIC_CONFIG_URL="https://firebase.googleapis.com/v1alpha/projects/-/apps/{app-id}/webConfig",GTAG_URL="https://www.googletagmanager.com/gtag/js",logger=new Logger("@firebase/analytics");function promiseAllSettled(e){return Promise.all(e.map(e=>e.catch(e=>e)))}function insertScriptTag(e,t){const n=document.createElement("script");n.src=`${GTAG_URL}?l=${e}&id=${t}`,n.async=!0,document.head.appendChild(n)}function getOrCreateDataLayer(e){let t=[];return Array.isArray(window[e])?t=window[e]:window[e]=t,t}async function gtagOnConfig(e,t,n,r,a,i){r=r[a];try{if(r)await t[r];else{const s=await promiseAllSettled(n);var o=s.find(e=>e.measurementId===a);o&&await t[o.appId]}}catch(e){logger.error(e)}e("config",a,i)}async function gtagOnEvent(e,n,r,a,i){try{let t=[];if(i&&i.send_to){let e=i.send_to;Array.isArray(e)||(e=[e]);const l=await promiseAllSettled(r);for(const c of e){var o=l.find(e=>e.measurementId===c),s=o&&n[o.appId];if(!s){t=[];break}t.push(s)}}0===t.length&&(t=Object.values(n)),await Promise.all(t),e("event",a,i||{})}catch(e){logger.error(e)}}function wrapGtag(r,a,i,o){return async function(e,t,n){try{"event"===e?await gtagOnEvent(r,a,i,t,n):"config"===e?await gtagOnConfig(r,a,i,o,t,n):r("set",t)}catch(e){logger.error(e)}}}function wrapOrCreateGtag(e,t,n,r,a){let i=function(){window[r].push(arguments)};return window[a]&&"function"==typeof window[a]&&(i=window[a]),window[a]=wrapGtag(i,e,t,n),{gtagCore:i,wrappedGtag:window[a]}}function findGtagScriptOnPage(){var e=window.document.getElementsByTagName("script");for(const t of Object.values(e))if(t.src&&t.src.includes(GTAG_URL))return t;return null}const ERRORS={"already-exists":"A Firebase Analytics instance with the appId {$id}  already exists. Only one Firebase Analytics instance can be created for each appId.","already-initialized":"initializeAnalytics() cannot be called again with different options than those it was initially called with. It can be called again with the same options to return the existing instance, or getAnalytics() can be used to get a reference to the already-intialized instance.","already-initialized-settings":"Firebase Analytics has already been initialized.settings() must be called before initializing any Analytics instanceor it will have no effect.","interop-component-reg-failed":"Firebase Analytics Interop Component failed to instantiate: {$reason}","invalid-analytics-context":"Firebase Analytics is not supported in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","indexeddb-unavailable":"IndexedDB unavailable or restricted in this environment. Wrap initialization of analytics in analytics.isSupported() to prevent initialization in unsupported environments. Details: {$errorInfo}","fetch-throttle":"The config fetch request timed out while in an exponential backoff state. Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.","config-fetch-failed":"Dynamic config fetch failed: [{$httpStatus}] {$responseMessage}","no-api-key":'The "apiKey" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid API key.',"no-app-id":'The "appId" field is empty in the local Firebase config. Firebase Analytics requires this field tocontain a valid app ID.'},ERROR_FACTORY=new ErrorFactory("analytics","Analytics",ERRORS),LONG_RETRY_FACTOR=30,BASE_INTERVAL_MILLIS=1e3;class RetryData{constructor(e={},t=BASE_INTERVAL_MILLIS){this.throttleMetadata=e,this.intervalMillis=t}getThrottleMetadata(e){return this.throttleMetadata[e]}setThrottleMetadata(e,t){this.throttleMetadata[e]=t}deleteThrottleMetadata(e){delete this.throttleMetadata[e]}}const defaultRetryData=new RetryData;function getHeaders(e){return new Headers({Accept:"application/json","x-goog-api-key":e})}async function fetchDynamicConfig(e){var t,{appId:n,apiKey:e}=e,e={method:"GET",headers:getHeaders(e)},n=DYNAMIC_CONFIG_URL.replace("{app-id}",n);const r=await fetch(n,e);if(200===r.status||304===r.status)return r.json();{let e="";try{var a=await r.json();null!==(t=a.error)&&void 0!==t&&t.message&&(e=a.error.message)}catch(e){}throw ERROR_FACTORY.create("config-fetch-failed",{httpStatus:r.status,responseMessage:e})}}async function fetchDynamicConfigWithRetry(e,t=defaultRetryData,n){var{appId:r,apiKey:a,measurementId:i}=e.options;if(!r)throw ERROR_FACTORY.create("no-app-id");if(!a){if(i)return{measurementId:i,appId:r};throw ERROR_FACTORY.create("no-api-key")}e=t.getThrottleMetadata(r)||{backoffCount:0,throttleEndTimeMillis:Date.now()};const o=new AnalyticsAbortSignal;return setTimeout(async()=>{o.abort()},void 0!==n?n:FETCH_TIMEOUT_MILLIS),attemptFetchDynamicConfigWithRetry({appId:r,apiKey:a,measurementId:i},e,o,t)}async function attemptFetchDynamicConfigWithRetry(t,{throttleEndTimeMillis:e,backoffCount:n},r,a=defaultRetryData){var{appId:i,measurementId:o}=t;try{await setAbortableTimeout(r,e)}catch(e){if(o)return logger.warn("Timed out fetching this Firebase app's measurement ID from the server."+` Falling back to the measurement ID ${o}`+` provided in the "measurementId" field in the local Firebase config. [${e.message}]`),{appId:i,measurementId:o};throw e}try{var s=await fetchDynamicConfig(t);return a.deleteThrottleMetadata(i),s}catch(e){if(!isRetriableError(e)){if(a.deleteThrottleMetadata(i),o)return logger.warn("Failed to fetch this Firebase app's measurement ID from the server."+` Falling back to the measurement ID ${o}`+` provided in the "measurementId" field in the local Firebase config. [${e.message}]`),{appId:i,measurementId:o};throw e}o=503===Number(e.customData.httpStatus)?calculateBackoffMillis(n,a.intervalMillis,LONG_RETRY_FACTOR):calculateBackoffMillis(n,a.intervalMillis),n={throttleEndTimeMillis:Date.now()+o,backoffCount:n+1};return a.setThrottleMetadata(i,n),logger.debug(`Calling attemptFetch again in ${o} millis`),attemptFetchDynamicConfigWithRetry(t,n,r,a)}}function setAbortableTimeout(a,i){return new Promise((e,t)=>{var n=Math.max(i-Date.now(),0);const r=setTimeout(e,n);a.addEventListener(()=>{clearTimeout(r),t(ERROR_FACTORY.create("fetch-throttle",{throttleEndTimeMillis:i}))})})}function isRetriableError(e){if(!(e instanceof FirebaseError&&e.customData))return!1;e=Number(e.customData.httpStatus);return 429===e||500===e||503===e||504===e}class AnalyticsAbortSignal{constructor(){this.listeners=[]}addEventListener(e){this.listeners.push(e)}abort(){this.listeners.forEach(e=>e())}}async function validateIndexedDB(){if(!isIndexedDBAvailable())return logger.warn(ERROR_FACTORY.create("indexeddb-unavailable",{errorInfo:"IndexedDB is not available in this environment."}).message),!1;try{await validateIndexedDBOpenable()}catch(e){return logger.warn(ERROR_FACTORY.create("indexeddb-unavailable",{errorInfo:e}).message),!1}return!0}async function _initializeAnalytics(t,e,n,r,a,i,o){const s=fetchDynamicConfigWithRetry(t);s.then(e=>{n[e.measurementId]=e.appId,t.options.measurementId&&e.measurementId!==t.options.measurementId&&logger.warn(`The measurement ID in the local Firebase config (${t.options.measurementId})`+` does not match the measurement ID fetched from the server (${e.measurementId}).`+" To ensure analytics events are always sent to the correct Analytics property, update the measurement ID field in the local config or remove it from the local config.")}).catch(e=>logger.error(e)),e.push(s);var l=validateIndexedDB().then(e=>{if(e)return r.getId()}),[e,l]=await Promise.all([s,l]);findGtagScriptOnPage()||insertScriptTag(i,e.measurementId),a("js",new Date);const c=null!==(o=null==o?void 0:o.config)&&void 0!==o?o:{};return c[ORIGIN_KEY]="firebase",c.update=!0,null!=l&&(c[GA_FID_KEY]=l),a("config",e.measurementId,c),e.measurementId}class AnalyticsService{constructor(e){this.app=e}_delete(){return delete initializationPromisesMap[this.app.options.appId],Promise.resolve()}}let initializationPromisesMap={},dynamicConfigPromisesList=[];const measurementIdToAppId={};let dataLayerName="dataLayer",gtagName="gtag",gtagCoreFunction,wrappedGtagFunction,globalInitDone=!1;function settings(e){if(globalInitDone)throw ERROR_FACTORY.create("already-initialized");e.dataLayerName&&(dataLayerName=e.dataLayerName),e.gtagName&&(gtagName=e.gtagName)}function warnOnBrowserContextMismatch(){const e=[];var t;isBrowserExtension()&&e.push("This is a browser extension environment."),areCookiesEnabled()||e.push("Cookies are not available."),0<e.length&&(t=e.map((e,t)=>`(${t+1}) ${e}`).join(" "),t=ERROR_FACTORY.create("invalid-analytics-context",{errorInfo:t}),logger.warn(t.message))}function factory(e,t,n){warnOnBrowserContextMismatch();var r,a,i=e.options.appId;if(!i)throw ERROR_FACTORY.create("no-app-id");if(!e.options.apiKey){if(!e.options.measurementId)throw ERROR_FACTORY.create("no-api-key");logger.warn('The "apiKey" field is empty in the local Firebase config. This is needed to fetch the latest'+` measurement ID for this Firebase app. Falling back to the measurement ID ${e.options.measurementId}`+' provided in the "measurementId" field in the local Firebase config.')}if(null!=initializationPromisesMap[i])throw ERROR_FACTORY.create("already-exists",{id:i});return globalInitDone||(getOrCreateDataLayer(dataLayerName),{wrappedGtag:r,gtagCore:a}=wrapOrCreateGtag(initializationPromisesMap,dynamicConfigPromisesList,measurementIdToAppId,dataLayerName,gtagName),wrappedGtagFunction=r,gtagCoreFunction=a,globalInitDone=!0),initializationPromisesMap[i]=_initializeAnalytics(e,dynamicConfigPromisesList,measurementIdToAppId,t,gtagCoreFunction,dataLayerName,n),new AnalyticsService(e)}async function logEvent$1(e,t,n,r,a){a&&a.global?e("event",n,r):(t=await t,e("event",n,Object.assign(Object.assign({},r),{send_to:t})))}async function setCurrentScreen$1(e,t,n,r){if(r&&r.global)return e("set",{screen_name:n}),Promise.resolve();e("config",await t,{update:!0,screen_name:n})}async function setUserId$1(e,t,n,r){if(r&&r.global)return e("set",{user_id:n}),Promise.resolve();e("config",await t,{update:!0,user_id:n})}async function setUserProperties$1(e,t,n,r){if(r&&r.global){const a={};for(const i of Object.keys(n))a[`user_properties.${i}`]=n[i];return e("set",a),Promise.resolve()}e("config",await t,{update:!0,user_properties:n})}async function setAnalyticsCollectionEnabled$1(e,t){e=await e;window[`ga-disable-${e}`]=!t}function getAnalytics(e=getApp()){e=getModularInstance(e);const t=_getProvider(e,ANALYTICS_TYPE);return t.isInitialized()?t.getImmediate():initializeAnalytics(e)}function initializeAnalytics(e,t={}){const n=_getProvider(e,ANALYTICS_TYPE);if(n.isInitialized()){e=n.getImmediate();if(deepEqual(t,n.getOptions()))return e;throw ERROR_FACTORY.create("already-initialized")}return n.initialize({options:t})}async function isSupported(){if(isBrowserExtension())return!1;if(!areCookiesEnabled())return!1;if(!isIndexedDBAvailable())return!1;try{return await validateIndexedDBOpenable()}catch(e){return!1}}function setCurrentScreen(e,t,n){e=getModularInstance(e),setCurrentScreen$1(wrappedGtagFunction,initializationPromisesMap[e.app.options.appId],t,n).catch(e=>logger.error(e))}function setUserId(e,t,n){e=getModularInstance(e),setUserId$1(wrappedGtagFunction,initializationPromisesMap[e.app.options.appId],t,n).catch(e=>logger.error(e))}function setUserProperties(e,t,n){e=getModularInstance(e),setUserProperties$1(wrappedGtagFunction,initializationPromisesMap[e.app.options.appId],t,n).catch(e=>logger.error(e))}function setAnalyticsCollectionEnabled(e,t){e=getModularInstance(e),setAnalyticsCollectionEnabled$1(initializationPromisesMap[e.app.options.appId],t).catch(e=>logger.error(e))}function logEvent(e,t,n,r){e=getModularInstance(e),logEvent$1(wrappedGtagFunction,initializationPromisesMap[e.app.options.appId],t,n,r).catch(e=>logger.error(e))}const name="@firebase/analytics",version="0.7.5";function registerAnalytics(){_registerComponent(new Component(ANALYTICS_TYPE,(e,{options:t})=>{return factory(e.getProvider("app").getImmediate(),e.getProvider("installations-internal").getImmediate(),t)},"PUBLIC")),_registerComponent(new Component("analytics-internal",function(e){try{const r=e.getProvider(ANALYTICS_TYPE).getImmediate();return{logEvent:(e,t,n)=>logEvent(r,e,t,n)}}catch(e){throw ERROR_FACTORY.create("interop-component-reg-failed",{reason:e})}},"PRIVATE")),registerVersion(name,version),registerVersion(name,version,"esm2017")}registerAnalytics();export{getAnalytics,initializeAnalytics,isSupported,logEvent,setAnalyticsCollectionEnabled,setCurrentScreen,setUserId,setUserProperties,settings};